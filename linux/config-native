#! /bin/sh
#
# If the package-native.mk file is not present, create it with the
# best guess for the macros for doing a native build on the current
# platform.
#
# This script is written as portably as possible sticking with
# Bourne shell syntax and older POSIX-1003.1 utilities for
# generally executed commands.

Pgm=`basename "$0"`
CmdLine="$Pgm${@:+ }$@"

Have_RPM=0
Os=
OsArch=
OsVer=
OsRel=
OsKvariants=
Kmodtool=

Fail()
{
	echo >&2 "$Pgm: $@"
	exit 1
}


Usage()
{
	echo >&2 $"Usage:" "$Pgm:" $"[-k kvariants]" $"[-r kernel-release]"
	echo >&2 $"         -k kvariants" \
		$"         limit kernel variants searched for to this list"
	echo >&2 $"         -r kernel-release" \
		$"    kernel release to use instead of \"uname -r\""

	exit ${1:-1}
}


set_osvars_rpm()
{
	osname=$1
	pkgname=$2

	if rpm -q "$pkgname" > /dev/null 2> /dev/null
	then
		Os=$osname
		osfullver=`rpm -q --qf '%{VERSION}' "$pkgname"`
		OsVer=`echo "$osfullver" | sed -re 's/^([0-9]+).*$/\1/'`
		osfullrel=`rpm -q --qf '%{RELEASE}' "$pkgname"`
		if [ "$Os" = "rhel" ]
		then
			OsRel=`echo "$osfullrel" | \
					sed -re 's/^[0-9]+\.([0-9]+).*$/\1/'`
		else
			OsRel=`echo "$osfullrel" | \
					sed -re 's/^([0-9]+).*$/\1/'`
		fi
		return 0
	fi

	return 1
}


what_Os()
{
	if [ $Have_RPM -ne 0 ]
	then
		set_osvars_rpm centos centos-release && return 0

		set_osvars_rpm fedora fedora-release && return 0

		for pkgs in \
			redhat-release \
			redhat-release-client \
			redhat-release-computenode \
			redhat-release-server \
			redhat-release-workstation
		do
			set_osvars_rpm rhel "$pkgs" && return 0
		done
	fi

	return 1
}


what_Kmodtool()
{
	Kmodtool=
	nativekmt=/usr/lib/rpm/redhat/kmodtool 
	os=$Os

	[ $Os = centos ] && os=rhel

	case $os$OsVer in
	rhel4)
		Kmodtool=./kmodtool.el5
		;;
	rhel5)
		if [ -x "$nativekmt" ]
		then
			Kmodtool=$nativekmt
		else
			Kmodtool=./kmodtool.el5
		fi
		;;
	rhel*|fedora*)
		Kmodtool=./kmodtool.el6
		;;
	*)
		return 1
		;;
	esac

	return 0
}


what_Kvariants()
{
	kverrel=$1
	variants=$2
	OsKvariants=
	ret=1

	if [ $Have_RPM -ne 0 ]
	then
		for kv in $variants
		do
			eval kve=$kv
			if rpm -q "kernel-${kve}${kve:+-}devel-$kverrel" \
						> /dev/null 2> /dev/null
			then
				OsKvariants="${OsKvariants}${OsKvariants:+ }${kv}"
				ret=0
			fi
		done
	fi

	return $ret
}

what_Arch()
{
	arch=`uname -p`

	# Unfortunately, some virtual environments can "lie" returning
	# the wrong result for "uname -p".  Correct it if necessary.
	if [ $arch = i386 ]
	then
		case $os in
		rhel*|centos*) arch=i686;;
		esac
	fi

	OsArch=$arch

	return 0
}


Arg_r=
Arg_k=

while getopts r:k: argflg
do
	case $argflg in
	r) Arg_r=$OPTARG;;
	k) Arg_k=$OPTARG;;
	?) Usage 1;;
	esac
done
shift `expr $OPTIND - 1`

if [ -n "$Arg_k" ]
then
	Kvariants=$Arg_k
else
	Kvariants='"" smp largesmp xenU hugemem xen PAE'
fi

if [ -n "$Arg_r" ]
then
	Kverrel=$Arg_r
else
	Kverrel=`uname -r`
fi

if rpm --version > /dev/null 2> /dev/null
then
	Have_RPM=1
fi

what_Os || Fail $"Cannot determine OS."
what_Kmodtool || Fail $"Cannot determine kmodtool."
verrel=`"$Kmodtool" verrel "$Kverrel"` || \
				Fail $"Cannot determine kernel release."
what_Kvariants "$verrel" "$Kvariants" || Fail $"Cannot determine kvariants."
what_Arch || Fail $"Cannot determine architecture."

echo $"# This file autogenerated by:"
echo "#       $CmdLine"
echo "#"

case $Os in
rhel|centos)
	osnv=rhel$OsVer

	echo "PLATFORMS              = $osnv.$OsArch"

	echo "OSMACRO_$osnv          = rhel_version"

	case $OsVer in
	4) echo "OSMACROVER_$osnv       = 406";;
	5) echo "OSMACROVER_$osnv       = 505";;
	*) echo "OSMACROVER_$osnv       = ${OsVer}00";;
	esac

	echo "KVARIANTS_$osnv.$OsArch = $OsKvariants"

	if [ $OsVer -eq 4 ]
	then
		echo "Dist_$osnv             = .EL"
	else
		echo "Dist_$osnv             = .el$OsVer"
	fi

	if [ -n "$Arg_r" ]
	then
		echo "Kverrel_$osnv          = $verrel"
	fi
	;;
fedora)
	osnv=fc$OsVer

	echo "PLATFORMS              = $osnv.$OsArch"

	echo "OSMACRO_$osnv           = fedora"
	echo "OSMACROVER_$osnv        = $OsVer"

	if [ -n "$Arg_r" ]
	then
		echo "Kverrel_$osnv          = $verrel"
	fi
	;;
*)
	;;
esac
